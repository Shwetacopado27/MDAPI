{
  "recordTypeMap": {},
  "RecordSetBundles": [
    {
      "Records": [
        {
          "attributes": {
            "type": "copado__Function__c",
            "url": "/services/data/v58.0/sobjects/copado__Function__c/a0o7R00000OE3jsQAD"
          },
          "copado__API_Name__c": "Back_Promotions_Automation_Per_Connection",
          "copado__Description__c": "Script to automate pending back promotions from one source environment.",
          "copado__Image_Name__c": "copado-multicloud-metadata:v1",
          "copado__Options__c": "[ ]",
          "copado__Parameters__c": "[ {\n  \"name\" : \"project_Name\",\n  \"defaultValue\" : \"MDAPI Copado Fall23\"\n}, {\n  \"name\" : \"release_Name\",\n  \"defaultValue\" : \"Release1\"\n}, {\n  \"name\" : \"parent_Env\",\n  \"defaultValue\" : \"UAT\"\n}, {\n  \"name\" : \"child_EnvName\",\n  \"defaultValue\" : \"Dev1\"\n}, {\n  \"name\" : \"child_EnvName2\",\n  \"defaultValue\" : \"Dev2\"\n}, {\n  \"name\" : \"userstory_Status\",\n  \"defaultValue\" : \"Draft\"\n} ]",
          "copado__Script__c": "#!/bin/bash\nset -eup pipefail\n\n# Image name=copado-multicloud-metadata:v1\n# Parameters=none\n# we should pass as a parameter the targetEnvironments, small changes in apex to parse a string parameter TARGET_ENVIRONMENTS=\"cpdtrn2htf cpdtrnsit\" and split them in a list/set\n\ncat <<__EOT__ > /tmp/run.apex\nSet<String> targetEnvironments = new Set<String> {'${child_EnvName}','${child_EnvName2}'};\n    Id DestinationEnv = [Select id from copado__Environment__c where Name='${parent_Env}' LIMIT 1].Id;\n    Id ReleaseId = [Select id from copado__Release__c where Name='${release_Name}' LIMIT 1].id;\n    List<copado__Org__c> list_orgcred = [SELECT Id, copado__Environment__c FROM copado__Org__c WHERE copado__Environment__r.Name IN :targetEnvironments AND copado__Default_Credential__c = true LIMIT 100];\n    List<copado__User_Story__c> userStoryList = [select id, copado__status__c FROM copado__User_Story__c where  copado__status__c='${userstory_Status}' AND copado__Release__c=: ReleaseId ORDER BY CreatedDate DESC LIMIT 100];\n    Id project = [SELECT Id FROM copado__Project__c WHERE Name = '${project_Name}' LIMIT 1].Id;\n    \nSet<String> uniqueKeyForCompletedPros = new Set<String>();\nList<copado__Promoted_User_Story__c> completedUserStoryProm = [SELECT Id,copado__User_Story__c, copado__Promotion__r.copado__Source_Environment__c, copado__Promotion__r.copado__Destination_Environment__c, copado__Promotion__r.copado__Back_Promotion__c from copado__Promoted_User_Story__c where  copado__Status__c = 'Active' AND copado__Promotion__r.copado__Status__c ='Completed' AND ((copado__Promotion__r.copado__Back_Promotion__c=true AND copado__Promotion__r.copado__Source_Environment__c =: DestinationEnv  AND copado__Promotion__r.copado__Release__c=: ReleaseId) OR (copado__Promotion__r.copado__Back_Promotion__c=false AND copado__Promotion__r.copado__Destination_Environment__c =: DestinationEnv  AND copado__Promotion__r.copado__Release__c=: ReleaseId)) LIMIT 200];\nfor(copado__Promoted_User_Story__c pus :completedUserStoryProm){\n    uniqueKeyForCompletedPros.add(pus.copado__User_Story__c + String.valueOf(pus.copado__Promotion__r.copado__Back_Promotion__c) + (pus.copado__Promotion__r.copado__Back_Promotion__c ? pus.copado__Promotion__r.copado__Destination_Environment__c : pus.copado__Promotion__r.copado__Source_Environment__c));\n    }\n\n\nList<copado__Promotion__c> totalBackProm = new List<copado__Promotion__c>();\n\nMap<id,copado__User_Story__c> mapUserStories = new Map<id,copado__User_Story__c> ();\nmapUserStories.putall(userStoryList);\n\nfor (copado__Org__c orgCred : list_orgcred){\n    copado__Promotion__c prom_i = new copado__Promotion__c(\n        copado__Project__c = project,\n        copado__Destination_Org_Credential__c = orgCred.Id,\n        copado__Destination_Environment__c = orgCred.copado__Environment__c,\n        copado__Back_Promotion__c = true,\n        copado__Release__c = ReleaseId\n    );\n    totalBackProm.add(prom_i);\n\n}\ninsert totalBackProm;\n\nList<copado__Promoted_User_Story__c> promotedStories = new List<copado__Promoted_User_Story__c>();\nfor (copado__Promotion__c promotion : totalBackProm) {\n    for (copado__User_Story__c story : userStoryList) {\n        if(!uniqueKeyForCompletedPros.contains(story.Id + String.valueof(false) + promotion.copado__Destination_Environment__c) && !uniqueKeyForCompletedPros.contains(story.Id + String.valueof(true) + promotion.copado__Destination_Environment__c)){\n            copado__Promoted_User_Story__c promoteStory = new copado__Promoted_User_Story__c();\n            promoteStory.copado__User_Story__c = story.Id;\n            promoteStory.Name = 'Daily Back Promotion - ' + Date.today().format();\n            promoteStory.copado__Promotion__c = promotion.Id;\n            promotedStories.add(promoteStory);   \n        }\n    }\n}\n\ninsert promotedStories;\n\nfor (copado__Promotion__c promotion : totalBackProm) {\n    copado.RunDeployPromotion.InvocableVariables invocableVariable = new copado.RunDeployPromotion.InvocableVariables();\n    invocableVariable.checkOnly = false;\n    invocableVariable.deploymentName = 'Daily Back Promotion - ' + Date.today().format();\n    invocableVariable.promotionId = promotion.Id;\n    invocableVariable.testLevel = 'NoTestRun';\n    List<copado.RunDeployPromotion.InvocableVariables> invocableVariables = new List<copado.RunDeployPromotion.InvocableVariables>{invocableVariable};\n    copado.RunDeployPromotion.execute(invocableVariables);\n}\n__EOT__\n\n# fix urls\nexport CF_SF_ENDPOINT=\"https://$(echo $CF_SF_ENDPOINT | sed -e 's/[^/]*\\/\\/\\([^@]*@\\)\\?\\([^:/]*\\).*/\\2/')\"\n\nSFDX_ACCESS_TOKEN=\"$CF_SF_SESSIONID\" sf org login access-token --alias copadoOrg --instance-url \"$CF_SF_ENDPOINT\" --no-prompt\nsf apex run --file /tmp/run.apex --target-org copadoOrg --json",
          "copado__Type__c": "Custom",
          "copado__Version__c": "4.0",
          "copado__Worker_Size__c": "M",
          "Id": "a0o7R00000OE3jsQAD",
          "LastReferencedDate": "2023-10-04T10:13:23.000+0000",
          "LastViewedDate": "2023-10-04T10:13:23.000+0000",
          "Name": "Back_Promotions_Automation_Per_Connection"
        }
      ],
      "ObjectType": "copado__Function__c"
    }
  ],
  "blobsByUID": {}
}